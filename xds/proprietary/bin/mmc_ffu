#!/system/bin/sh
# coded by sunghyun1.cho@samsung.com

EXT_CSD_FILE=/sys/kernel/debug/mmc0/mmc0:0001/ext_csd
OLD_VERSION=00
OLD_VERSION_02=01
NEW_VERSION=02

get_extcsd()
{
  ext_csd=`cat $EXT_CSD_FILE`
}

check_version()
{
  if [ "$1" = "$OLD_VERSION" ]; then
    setprop gn.firmware.ver 00
  elif [ "$1" = "$OLD_VERSION_02" ]; then
    setprop gn.firmware.ver 01
  elif [ "$1" = "$NEW_VERSION" ]; then
    setprop gn.firmware.ver 02
  fi
}

# exit condition
if [ ! -e $EXT_CSD_FILE ]; then
  exit 1
fi

get_extcsd
fw_version=${ext_csd:$((511*2-257*2)):2}

# check before FFU
check_version $fw_version

CLOCK_BACKUP=`cat /sys/kernel/debug/mmc0/clock`
setprop gn.emmc.clock "$CLOCK_BACKUP"

FW_VER=`getprop gn.firmware.ver`

if [ "$NEW_VERSION" != "$FW_VER" ]; then
  # prepare for FFU
  echo 10000000 > /sys/kernel/debug/mmc0/clock

  # execute FFU
  # /system/bin/mmc_util emmc50 ffu /system/bin/VPX16GB_P05.bin /dev/block/mmcblk0
  /system/bin/mmc_util emmc50 ffu /system/bin/XENONT3_SOC_VNX_FFT_P02.bin /dev/block/mmcblk0

  # check after FFU
  get_extcsd
  fw_version=${ext_csd:$((511*2-257*2)):2}
  check_version $fw_version
  
  # backup clock after FFU
  echo $CLOCK_BACKUP > /sys/kernel/debug/mmc0/clock
  setprop gn.emmc.clock "$CLOCK_BACKUP"
  
fi
